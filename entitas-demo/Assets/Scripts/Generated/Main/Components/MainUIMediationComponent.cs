//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Main;

public partial class MainContext {

    public MainEntity uIMediationEntity { get { return GetGroup(MainMatcher.UIMediation).GetSingleEntity(); } }
    public UIMediation uIMediation { get { return uIMediationEntity.uIMediation; } }
    public bool hasUIMediation { get { return uIMediationEntity != null; } }

    public MainEntity SetUIMediation(Services.IUIMediationService newValue) {
        if (hasUIMediation) {
            throw new Entitas.EntitasException("Could not set UIMediation!\n" + this + " already has an entity with UIMediation!",
                "You should check if the context already has a uIMediationEntity before setting it or use context.ReplaceUIMediation().");
        }
        var entity = CreateEntity();
        entity.AddUIMediation(newValue);
        return entity;
    }

    public void ReplaceUIMediation(Services.IUIMediationService newValue) {
        var entity = uIMediationEntity;
        if (entity == null) {
            entity = SetUIMediation(newValue);
        } else {
            entity.ReplaceUIMediation(newValue);
        }
    }

    public void RemoveUIMediation() {
        uIMediationEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MainEntity {

    public UIMediation uIMediation { get { return (UIMediation)GetComponent(MainComponentsLookup.UIMediation); } }
    public bool hasUIMediation { get { return HasComponent(MainComponentsLookup.UIMediation); } }

    public void AddUIMediation(Services.IUIMediationService newValue) {
        var index = MainComponentsLookup.UIMediation;
        var component = (UIMediation)CreateComponent(index, typeof(UIMediation));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUIMediation(Services.IUIMediationService newValue) {
        var index = MainComponentsLookup.UIMediation;
        var component = (UIMediation)CreateComponent(index, typeof(UIMediation));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUIMediation() {
        RemoveComponent(MainComponentsLookup.UIMediation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MainMatcher {

    static Entitas.IMatcher<MainEntity> _matcherUIMediation;

    public static Entitas.IMatcher<MainEntity> UIMediation {
        get {
            if (_matcherUIMediation == null) {
                var matcher = (Entitas.Matcher<MainEntity>)Entitas.Matcher<MainEntity>.AllOf(MainComponentsLookup.UIMediation);
                matcher.componentNames = MainComponentsLookup.componentNames;
                _matcherUIMediation = matcher;
            }

            return _matcherUIMediation;
        }
    }
}
